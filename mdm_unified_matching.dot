digraph Unified_MDM_Architecture {
  rankdir=TB;
  node [shape=box, style=rounded];
  compound=true;

  subgraph cluster_legend {
    label = "Legend";
    style=filled;
    fillcolor="#F5F5F5";
    BigQuery_Service [label="BigQuery Service", fillcolor="#4285f4", fontcolor="white", style="filled,solid"];
    Spanner_Service [label="Spanner Service", fillcolor="#ff9800", fontcolor="white", style="filled,solid"];
    Sync_Process [label="Sync Process", fillcolor="#9c27b0", fontcolor="white", style="filled,solid"];
    Data_Storage [label="Data Storage", shape=cylinder, fillcolor="#FFF8E1", style="filled,solid"];
    AI_Component [label="AI Component", shape=hexagon, fillcolor="#E8F5E8", style="filled,solid"];
  }

  subgraph cluster_data_sources {
    label = "1. Data Sources";
    bgcolor="#E8F5E8";

    subgraph cluster_batch_sources {
      label = "Batch Sources (Daily/Weekly)";
      bgcolor="#F0F8F0";
      Files [label="Files\n(CSV, JSON, Parquet)", shape=cylinder, fillcolor="#FFF8E1"];
      APIs [label="REST APIs\n(CRM, ERP, E-commerce)", shape=cylinder, fillcolor="#FFF8E1"];
      Databases [label="Databases\n(MySQL, PostgreSQL)", shape=cylinder, fillcolor="#FFF8E1"];
    }

    subgraph cluster_stream_sources {
      label = "Stream Sources (Real-time)";
      bgcolor="#F0F0F8";
      Kafka [label="Apache Kafka\n(Real-time Events)", shape=cylinder, fillcolor="#FFF8E1"];
      PubSub [label="Pub/Sub\n(Change Events)", fillcolor="#E1F5FE"];
      CDC [label="Change Data Capture\n(Database Logs)", shape=cylinder, fillcolor="#FFF8E1"];
    }

    // Sample entity data with actual results
    Sample_Entity [label="Sample Results:\n• 284 raw records from 3 sources\n• 100 unique entities identified\n• 64.8% deduplication achieved\n• 5-strategy AI matching (batch)\n• 4-strategy real-time (streaming)",
                   shape=note, fillcolor="#FFFACD", style="filled,dashed"];
  }

  subgraph cluster_processing_paths {
    label = "2. Aligned Dual Processing Paths";
    bgcolor="#F5F5F5";

    subgraph cluster_batch_path {
      label = "Batch Processing Path (BigQuery)";
      bgcolor="#E6F3FF";

      // Batch ingestion
      BQ_Raw [label="BigQuery Raw Tables\n(284 records from 3 sources)", shape=cylinder, fillcolor="#4285f4", fontcolor="white"];
      BQ_Standardization [label="BigQuery Standardization\n(100% completeness)", shape=ellipse, fillcolor="#4285f4", fontcolor="white"];
      BQ_Embeddings [label="BigQuery + Embeddings\n(gemini-embedding-001)", shape=cylinder, fillcolor="#4285f4", fontcolor="white"];

      // 5-Strategy Matching
      BQ_5_Strategy [label="5-Strategy Matching Engine\n• Exact (30%)\n• Fuzzy (25%)\n• Vector (20%)\n• Business (15%)\n• AI Natural Language (10%)", fillcolor="#4285f4", fontcolor="white"];

      BQ_Golden [label="BigQuery Golden Records\n(100 unique entities)\n(Deterministic IDs)", shape=cylinder, fillcolor="#4285f4", fontcolor="white"];

      // Flow
      Files -> BQ_Raw;
      APIs -> BQ_Raw;
      Databases -> BQ_Raw;
      BQ_Raw -> BQ_Standardization;
      BQ_Standardization -> BQ_Embeddings;
      BQ_Embeddings -> BQ_5_Strategy;
      BQ_5_Strategy -> BQ_Golden;
    }

    subgraph cluster_stream_path {
      label = "Streaming Processing Path (Spanner)";
      bgcolor="#FFE6F3";

      // Stream ingestion
      SP_Ingest [label="Spanner Real-time Ingestion\n(100 records/second)", fillcolor="#ff9800", fontcolor="white"];
      SP_Standardization [label="Live Standardization\n(Same patterns as batch)", shape=ellipse, fillcolor="#ff9800", fontcolor="white"];
      SP_Embeddings [label="Spanner + Embeddings\n(Same model as batch)", fillcolor="#ff9800", fontcolor="white"];

      // 4-Strategy Matching (proportionally adjusted)
      SP_4_Strategy [label="4-Strategy Matching Engine\n• Exact (33%)\n• Fuzzy (28%)\n• Vector (22%)\n• Business (17%)", fillcolor="#ff9800", fontcolor="white"];

      SP_Golden [label="Spanner Golden Records\n(Sub-second updates)\n(Same Deterministic IDs)", fillcolor="#ff9800", fontcolor="white"];

      // Flow
      Kafka -> SP_Ingest;
      PubSub -> SP_Ingest;
      CDC -> SP_Ingest;
      SP_Ingest -> SP_Standardization;
      SP_Standardization -> SP_Embeddings;
      SP_Embeddings -> SP_4_Strategy;
      SP_4_Strategy -> SP_Golden;
    }

    // Synchronization Layer
    subgraph cluster_sync {
      label = "Synchronization Layer";
      bgcolor="#F3E5F5";

      Morning_Sync [label="Morning Sync\nBigQuery → Spanner\n(Load batch results)", fillcolor="#9c27b0", fontcolor="white"];
      Evening_Sync [label="Evening Sync\nSpanner → BigQuery\n(Analytics feed)", fillcolor="#9c27b0", fontcolor="white"];

      BQ_Golden -> Morning_Sync;
      Morning_Sync -> SP_Golden;
      SP_Golden -> Evening_Sync;
      Evening_Sync -> BQ_Golden;
    }
  }

  subgraph cluster_unified_matching {
    label = "3. Aligned Decision Making";
    bgcolor="#FFF0E6";

    subgraph cluster_thresholds {
      label = "Unified Thresholds (Both Systems)";
      bgcolor="#F8F8F8";

      Threshold_Config [label="Aligned Configuration:\n• Auto-merge: ≥0.8\n• Human review: 0.6-0.8\n• No match: <0.6\n• Deterministic Entity IDs\n• Same standardization patterns", fillcolor="#2196f3", fontcolor="white"];
    }

    Match_Combiner [label="Weighted Ensemble Scoring\n(System-specific weights)", shape=ellipse, fillcolor="#E0F7FA"];
    Confidence_Scoring [label="Confidence Assessment\n(Aligned thresholds)", shape=ellipse, fillcolor="#E0F7FA"];

    // Connections from both paths
    BQ_5_Strategy -> Match_Combiner;
    SP_4_Strategy -> Match_Combiner;

    Match_Combiner -> Confidence_Scoring;
    Threshold_Config -> Confidence_Scoring;
  }

  subgraph cluster_decision_engine {
    label = "4. Aligned Decision & Golden Records";
    bgcolor="#E6FFE6";

    Auto_Merge [label="Auto Merge\n(Score ≥ 0.8)", shape=ellipse, fillcolor="#90EE90"];
    Human_Review [label="Human Review\n(0.6 ≤ Score < 0.8)", shape=cylinder, fillcolor="#FFB6C1"];
    No_Match [label="No Match\n(Score < 0.6)", shape=ellipse, fillcolor="#FFB6C1"];

    Golden_Record_Creator [label="Golden Record Creator\n(Deterministic IDs)\n(Survivorship Rules)", shape=ellipse, fillcolor="#E0F7FA"];

    Confidence_Scoring -> Auto_Merge [label="≥ 0.8"];
    Confidence_Scoring -> Human_Review [label="0.6-0.8"];
    Confidence_Scoring -> No_Match [label="< 0.6"];
    Auto_Merge -> Golden_Record_Creator;
    Human_Review -> Golden_Record_Creator [label="After Review"];
  }

  subgraph cluster_output {
    label = "5. Aligned Output & Distribution";
    bgcolor="#F0FFFF";

    subgraph cluster_batch_output {
      label = "Batch Analytics (BigQuery)";
      bgcolor="#E6F3FF";

      BQ_Analytics [label="BigQuery Analytics\n• Historical analysis\n• BigQuery ML\n• Data warehousing", shape=cylinder, fillcolor="#4285f4", fontcolor="white"];
      BI_Platform [label="BI Platforms\n(Looker, Tableau)", shape=cylinder, fillcolor="#E8F5E9"];
    }

    subgraph cluster_stream_output {
      label = "Real-time Operations (Spanner)";
      bgcolor="#FFE6F3";

      SP_APIs [label="Real-time APIs\n• Customer 360\n• Live lookup\n• Sub-second response", fillcolor="#ff9800", fontcolor="white"];
      Operational_Apps [label="Operational Apps\n(CRM, Marketing)", shape=cylinder, fillcolor="#E8F5E9"];
    }

    Golden_Record_Creator -> BQ_Analytics;
    Golden_Record_Creator -> SP_APIs;

    BQ_Analytics -> BI_Platform;
    SP_APIs -> Operational_Apps;
  }

  // Production results
  Production_Results [label="Production Results:\n• 64.8% deduplication achieved\n• 100 unique entities from 284 records\n• Sub-400ms streaming latency\n• 5-10 min batch processing\n• Deterministic cross-system IDs",
            shape=note, fillcolor="#E6F3FF", style="filled,dashed"];

  // Aligned architecture benefits
  Architecture_Benefits [label="Unified Architecture Benefits:\n• Consistent entity IDs across systems\n• Aligned decision thresholds (0.8/0.6)\n• Proportional strategy weights\n• Daily synchronization\n• Production-ready scalability",
                   shape=note, fillcolor="#F0FFF0", style="filled,dashed"];

  // Vector Embeddings Architecture Note
  Vector_Embeddings_Note [label="Vector Embeddings Strategy (10-20% weight):\n• BigQuery generates embeddings in batch (cost-effective)\n• Vertex AI stores for fast similarity lookup only\n• Streaming queries existing embeddings, doesn't generate\n• Edge optimization, not foundation - exact/fuzzy solve 80%\n• See VECTOR_EMBEDDINGS_ARCHITECTURE.md for details",
                         shape=note, fillcolor="#FFE6CC", style="filled,dashed"];

  // Layout hints (removed conflicting rank constraints for nodes in clusters)
  {rank=same; Auto_Merge; Human_Review}
}
